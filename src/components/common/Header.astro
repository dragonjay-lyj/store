---
const navLinks = [
  { label: '首页', url: '/', ariaLabel: '跳转到首页' },
  { label: '关于', url: '/about', ariaLabel: '跳转到关于页面' },
];
---

<header class="bg-gradient-to-r from-gray-800 to-gray-900 text-white shadow-lg sticky top-0 z-10">
  <div class="container mx-auto px-4 py-4 flex justify-between items-center">
    <!-- 左侧：品牌 Logo 和导航菜单 -->
    <div class="flex items-center gap-6 md:gap-8 animate-fade-in-left">
      <a href="/" class="text-xl font-bold text-indigo-400 flex items-center gap-2 hover:text-indigo-300 transition-colors duration-300 transform hover:scale-105">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
          />
        </svg>
        二次元商城
      </a>
      <nav class="hidden md:flex items-center gap-6 md:gap-8" aria-label="主菜单">
        {navLinks.map((link, index) => (
          <a
            href={link.url}
            class="text-lg font-semibold relative group text-gray-300 hover:text-indigo-400 transition-colors duration-300 transform hover:scale-105"
            aria-label={link.ariaLabel}
            style={`animation-delay: ${index * 0.1}s`}
          >
            {link.label}
            <span class="absolute bottom-0 left-0 w-0 h-0.5 bg-indigo-400 group-hover:w-full transition-all duration-300 ease-out"></span>
          </a>
        ))}
      </nav>
    </div>

    <!-- 移动端：搜索图标和汉堡菜单按钮 -->
    <div class="md:hidden flex items-center gap-4 animate-fade-in-right">
      <button
        class="mobile-search-toggle p-2 text-gray-300 hover:text-indigo-400 focus:outline-none focus:ring-2 focus:ring-indigo-400 rounded-full transition-all duration-200 transform hover:scale-110"
        aria-label="展开搜索框"
        aria-expanded="false"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
          />
        </svg>
      </button>
      <button
        class="mobile-menu-toggle p-2 text-gray-300 hover:text-indigo-400 focus:outline-none focus:ring-2 focus:ring-indigo-400 rounded-full transition-all duration-200 transform hover:scale-110"
        aria-label="展开导航菜单"
        aria-expanded="false"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6 transition-transform duration-300"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"
          />
        </svg>
      </button>
    </div>
  </div>

  <!-- 移动端：折叠菜单（默认隐藏） -->
  <div class="mobile-menu hidden md:hidden bg-gradient-to-b from-gray-800 to-gray-900 w-full absolute top-14 left-0 shadow-xl overflow-hidden">
    <nav class="flex flex-col px-4 py-2 gap-3 animate-slide-down" aria-label="移动端主菜单">
      {navLinks.map((link, index) => (
        <a
          href={link.url}
          class="text-lg font-semibold text-gray-200 hover:text-indigo-400 py-3 border-b border-gray-700 transition-colors duration-200 transform hover:translate-x-2"
          aria-label={link.ariaLabel}
          style={`animation-delay: ${index * 0.1}s`}
        >
          {link.label}
        </a>
      ))}
    </nav>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // 移动端菜单切换
    const menuToggle = document.querySelector('.mobile-menu-toggle');
    const mobileMenu = document.querySelector('.mobile-menu');
    const menuIcon = menuToggle.querySelector('svg');
    
    menuToggle.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      const isExpanded = !mobileMenu.classList.contains('hidden');
      menuToggle.setAttribute('aria-expanded', isExpanded.toString());
      // 切换汉堡菜单图标为关闭图标
      if (isExpanded) {
        menuIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>`;
        menuIcon.classList.add('rotate-180');
      } else {
        menuIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>`;
        menuIcon.classList.remove('rotate-180');
      }
    });
    
    
    // 点击外部关闭移动端菜单和搜索框
    document.addEventListener('click', (e) => {
      if (!menuToggle.contains(e.target) && !mobileMenu.contains(e.target)) {
        mobileMenu.classList.add('hidden');
        menuToggle.setAttribute('aria-expanded', 'false');
        menuIcon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>`;
        menuIcon.classList.remove('rotate-180');
      }
    });
  });
</script>

<style>
  /* 响应式设计：调整移动端样式 */
  @media (max-width: 768px) {
    .mobile-menu {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.4s ease-out;
    }
    .mobile-menu:not(.hidden) {
      max-height: 500px; /* 足够容纳菜单内容 */
    }
    .mobile-search {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.4s ease-out;
    }
    .mobile-search:not(.hidden) {
      max-height: 100px; /* 足够容纳搜索框 */
    }
  }

  /* 自定义动画 */
  @keyframes fade-in-left {
    from {
      opacity: 0;
      transform: translateX(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  .animate-fade-in-left {
    animation: fade-in-left 0.6s ease-out forwards;
  }

  @keyframes fade-in-right {
    from {
      opacity: 0;
      transform: translateX(10px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  .animate-fade-in-right {
    animation: fade-in-right 0.6s ease-out forwards;
  }

  @keyframes slide-down {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-slide-down {
    animation: slide-down 0.4s ease-out forwards;
  }
</style>